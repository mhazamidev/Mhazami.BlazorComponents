@if (Model != null)
{
    <ul class="mh-children-list">
        @foreach (var node in Model)
        {
            <li class="@(SelectedNode!=null&&SelectedNode.Id==node.Id?OnSelectClass:"")">
                <div @onmouseover="()=>{ node.ShowIcons = true; }" @onmouseout="()=>{node.ShowIcons = false;}">
                    @if (node.HasChildren)
                    {
                        <span class="mh-treeview-icon" @onclick="()=>Expend(node.Id)">
                            @if (node.IsExpanded)
                            {
                                @((MarkupString)UnExpendedIcon)
                            }
                            else
                            {
                                @((MarkupString)ExpendedIcon)
                            }
                        </span>
                    }
                    else
                    {
                        <span class="mh-treeview-icon">
                        </span>
                    }
                    @if (HasCheckBox)
                    {
                        <input type="checkbox" checked="@CheckedList.Exists(x=>x.Id==node.Id)" class="mh-treeview-check" id="@node.Id" @onchange="()=>CheckedNode(node)" />
                    }
                    <span class="@(HasOnClick?"pointer":"")" title="@Tooltip" @onclick="()=>CallOnClick(node)">
                        @if (!AllowHtml)
                        {
                            @node.Title
                        }
                        else 
                        {
                            @((MarkupString)node.Title)
                        }
                    </span>
                    <span class="mh-treeview-window-icons-box @(node.ShowIcons&&(Updateble || Removable)?"":" tree-display-none")">
                        <span class="mh-treeview-window-icon tree-icon-edit @(Updateble?"":"tree-display-none")" @onclick="()=>UpdateNode(node)">
                            <i class="fal fa-edit"></i>
                        </span>
                        <span class="mh-treeview-window-icon tree-icon-delete @(Removable?"":"tree-display-none")" @onclick="()=>DeleteNode(node)">
                            <i class="fas fa-trash-alt"></i>
                        </span>
                    </span>
                </div>
                @if (node.HasChildren && (node.IsExpanded || ExpendAll))
                {
                    <TreeViewChild Model="node.Children"
                                   IsOndemand="@IsOndemand"
                                   ExpendedIcon="@ExpendedIcon"
                                   UnExpendedIcon="@UnExpendedIcon"
                                   OndemandEvent="Expend"
                                   HasCheckBox="@HasCheckBox"
                                   CheckedNodeCallback="CheckedNode"
                                   Parent="@node.Id"
                                   CheckedList="@CheckedList"
                                   Updateble="@Updateble"
                                   Removable="@Removable"
                                   OnUpdate="UpdateNode"
                                   OnDelete="DeleteNode"
                                   OnClick="OnClick"
                                   Tooltip="@Tooltip"
                                   OnSelectedCssClass="@OnSelectedCssClass"
                                   ChangeSelectedNode="CallOnClick"
                                   Nodes="@Nodes"
                                   @ref="childTree">
                        @ChildContent
                    </TreeViewChild>
                }
            </li>
        }
    </ul>

}
